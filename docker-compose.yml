version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cryptonestle-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: cryptonestle_db
      POSTGRES_USER: cryptonestle
      POSTGRES_PASSWORD: cryptonestle_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - cryptonestle-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cryptonestle-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass cryptonestle_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cryptonestle-network

  # Main Application
  app:
    build:
      context: .
      target: production
    container_name: cryptonestle-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://cryptonestle:cryptonestle_password@postgres:5432/cryptonestle_db
      REDIS_URL: redis://:cryptonestle_redis_password@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_SECRET: your-refresh-token-secret-change-this-in-production
      JWT_REFRESH_EXPIRES_IN: 30d
      BCRYPT_ROUNDS: 12
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      CORS_ORIGIN: http://localhost:3000,http://localhost:3001
      LOG_LEVEL: info
      # Email Configuration (update with your SMTP settings)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      FROM_EMAIL: noreply@cryptonestle.com
      FROM_NAME: Cryptonestle
      # Blockchain Configuration (update with your RPC URLs and keys)
      ETH_RPC_URL: https://mainnet.infura.io/v3/your-infura-project-id
      ETH_PRIVATE_KEY: your-ethereum-private-key
      BSC_RPC_URL: https://bsc-dataseed.binance.org/
      BSC_PRIVATE_KEY: your-bsc-private-key
      POLYGON_RPC_URL: https://polygon-rpc.com/
      POLYGON_PRIVATE_KEY: your-polygon-private-key
      # Platform Configuration
      PLATFORM_WALLET_ADDRESS: your-platform-wallet-address
      PLATFORM_WALLET_PRIVATE_KEY: your-platform-wallet-private-key
      MIN_INVESTMENT_AMOUNT: 0.001
      MAX_INVESTMENT_AMOUNT: 100
      DEFAULT_INVESTMENT_FEE_PERCENT: 2.5
      # Admin Configuration
      ADMIN_EMAIL: admin@cryptonestle.com
      ADMIN_PASSWORD: Admin123!@#ChangeThis
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - cryptonestle-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: cryptonestle-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - cryptonestle-network

  # Database Admin (Optional - for development)
  adminer:
    image: adminer:latest
    container_name: cryptonestle-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - cryptonestle-network
    profiles:
      - development

  # Redis Admin (Optional - for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: cryptonestle-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:cryptonestle_redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - cryptonestle-network
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cryptonestle-network:
    driver: bridge
